block(`service_config) {
   alias_all(`lb:web:config:service),
   alias_all(`lb:web:config:service_abbr),
   alias_all(`lb:web:config:delim),
   alias_all(`lb:web:delim:binding),
   alias_all(`lb:web:delim:binding_abbr),
   alias_all(`lb:web:delim:schema),
   alias_all(`lb:web:delim:schema_abbr),
   clauses(`{

      service_by_prefix["/batfish/txn/*"] = x,
      delim_txn_service(x).

// Layer2
      service_by_prefix["/batfish/SamePhysicalSegment"] = x,
      delim_service(x) {
         delim_file_binding[] = "SamePhysicalSegment"
      }.
      file_definition_by_name["SamePhysicalSegment"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE1,INTERFACE1,NODE2,INTERFACE2",
         column_formats[] = "string,string,string,string"
      }.
      file_binding_by_name["SamePhysicalSegment"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SamePhysicalSegment",
         predicate_binding_by_name["libbatfish:Layer2:SamePhysicalSegment"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE1,INTERFACE1,NODE2,INTERFACE2"
            }
      }.

      service_by_prefix["/batfish/SetSwitchportAccess"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetSwitchportAccess"
      }.
      file_definition_by_name["SetSwitchportAccess"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "SWITCH,INTERFACE,VLAN",
         column_formats[] = "string,string,integer"
      }.
      file_binding_by_name["SetSwitchportAccess"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetSwitchportAccess",
         predicate_binding_by_name["libbatfish:Layer2:SetSwitchportAccess"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "SWITCH,INTERFACE,VLAN"
            }
      }.

      service_by_prefix["/batfish/SetSwitchportTrunkAllows"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetSwitchportTrunkAllows"
      }.
      file_definition_by_name["SetSwitchportTrunkAllows"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "SWITCH,INTERFACE,VLANSTART,VLANEND",
         column_formats[] = "string,string,integer,integer"
      }.
      file_binding_by_name["SetSwitchportTrunkAllows"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetSwitchportTrunkAllows",
         predicate_binding_by_name["libbatfish:Layer2:SetSwitchportTrunkAllows"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "SWITCH,INTERFACE,VLANSTART,VLANEND"
            }
      }.

      service_by_prefix["/batfish/SetSwitchportTrunkEncapsulation"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetSwitchportTrunkEncapsulation"
      }.
      file_definition_by_name["SetSwitchportTrunkEncapsulation"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "SWITCH,INTERFACE,ENCAPSULATION",
         column_formats[] = "string,string,string"
      }.
      file_binding_by_name["SetSwitchportTrunkEncapsulation"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetSwitchportTrunkEncapsulation",
         predicate_binding_by_name["libbatfish:Layer2:SetSwitchportTrunkEncapsulation"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "SWITCH,INTERFACE,ENCAPSULATION"
            }
      }.

      service_by_prefix["/batfish/SetSwitchportTrunkNative"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetSwitchportTrunkNative"
      }.
      file_definition_by_name["SetSwitchportTrunkNative"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "SWITCH,INTERFACE,VLAN",
         column_formats[] = "string,string,integer"
      }.
      file_binding_by_name["SetSwitchportTrunkNative"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetSwitchportTrunkNative",
         predicate_binding_by_name["libbatfish:Layer2:SetSwitchportTrunkNative"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "SWITCH,INTERFACE,VLAN"
            }
      }.
      
      service_by_prefix["/batfish/SetVlanInterface"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetVlanInterface"
      }.
      file_definition_by_name["SetVlanInterface"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE,VLAN",
         column_formats[] = "string,string,integer"
      }.
      file_binding_by_name["SetVlanInterface"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetVlanInterface",
         predicate_binding_by_name["libbatfish:Layer2:SetVlanInterface"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE,VLAN"
            }
      }.

// DataPlane
      service_by_prefix["/batfish/SetInterfaceFilterIn"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetInterfaceFilterIn"
      }.
      file_definition_by_name["SetInterfaceFilterIn"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE,FILTER",
         column_formats[] = "string,string,string"
      }.
      file_binding_by_name["SetInterfaceFilterIn"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetInterfaceFilterIn",
         predicate_binding_by_name["libbatfish:DataPlane:SetInterfaceFilterIn"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE,FILTER"
            }
      }.

      service_by_prefix["/batfish/SetInterfaceFilterOut"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetInterfaceFilterOut"
      }.
      file_definition_by_name["SetInterfaceFilterOut"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE,FILTER",
         column_formats[] = "string,string,string"
      }.
      file_binding_by_name["SetInterfaceFilterOut"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetInterfaceFilterOut",
         predicate_binding_by_name["libbatfish:DataPlane:SetInterfaceFilterOut"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE,FILTER"
            }
      }.

      service_by_prefix["/batfish/SetInterfaceRoutingPolicy"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetInterfaceRoutingPolicy"
      }.
      file_definition_by_name["SetInterfaceRoutingPolicy"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE,POLICY",
         column_formats[] = "string,string,string"
      }.
      file_binding_by_name["SetInterfaceRoutingPolicy"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetInterfaceRoutingPolicy",
         predicate_binding_by_name["libbatfish:DataPlane:SetInterfaceRoutingPolicy"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE,POLICY"
            }
      }.

// Ip
      service_by_prefix["/batfish/SetNetwork"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetNetwork"
      }.
      file_definition_by_name["SetNetwork"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "STARTIP,START,END,PREFIXLENGTH",
         column_formats[] = "integer, integer,integer,integer"
      }.
      file_binding_by_name["SetNetwork"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetNetwork",
         predicate_binding_by_name["libbatfish:Ip:SetNetwork"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "STARTIP,START,END,PREFIXLENGTH"
            }
      }.

// IpAccessList
      service_by_prefix["/batfish/SetIpAccessListLine_deny"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIpAccessListLine_deny"
      }.
      file_definition_by_name["SetIpAccessListLine_deny"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "LIST,LINE",
         column_formats[] = "string,integer"
      }.
      file_binding_by_name["SetIpAccessListLine_deny"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIpAccessListLine_deny",
         predicate_binding_by_name["libbatfish:IpAccessList:SetIpAccessListLine_deny"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "LIST,LINE"
            }
      }.

      service_by_prefix["/batfish/SetIpAccessListLine_dstIpRange"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIpAccessListLine_dstIpRange"
      }.
      file_definition_by_name["SetIpAccessListLine_dstIpRange"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "LIST,LINE,DSTIPSTART,DSTIPEND",
         column_formats[] = "string,integer,integer,integer"
      }.
      file_binding_by_name["SetIpAccessListLine_dstIpRange"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIpAccessListLine_dstIpRange",
         predicate_binding_by_name["libbatfish:IpAccessList:SetIpAccessListLine_dstIpRange"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "LIST,LINE,DSTIPSTART,DSTIPEND"
            }
      }.

      service_by_prefix["/batfish/SetIpAccessListLine_dstPortRange"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIpAccessListLine_dstPortRange"
      }.
      file_definition_by_name["SetIpAccessListLine_dstPortRange"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "LIST,LINE,DSTPORTSTART,DSTPORTEND",
         column_formats[] = "string,integer,integer,integer"
      }.
      file_binding_by_name["SetIpAccessListLine_dstPortRange"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIpAccessListLine_dstPortRange",
         predicate_binding_by_name["libbatfish:IpAccessList:SetIpAccessListLine_dstPortRange"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "LIST,LINE,DSTPORTSTART,DSTPORTEND"
            }
      }.

      service_by_prefix["/batfish/SetIpAccessListLine_permit"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIpAccessListLine_permit"
      }.
      file_definition_by_name["SetIpAccessListLine_permit"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "LIST,LINE",
         column_formats[] = "string,integer"
      }.
      file_binding_by_name["SetIpAccessListLine_permit"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIpAccessListLine_permit",
         predicate_binding_by_name["libbatfish:IpAccessList:SetIpAccessListLine_permit"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "LIST,LINE"
            }
      }.

      service_by_prefix["/batfish/SetIpAccessListLine_protocol"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIpAccessListLine_protocol"
      }.
      file_definition_by_name["SetIpAccessListLine_protocol"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "LIST,LINE,PROTOCOL",
         column_formats[] = "string,integer,integer"
      }.
      file_binding_by_name["SetIpAccessListLine_protocol"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIpAccessListLine_protocol",
         predicate_binding_by_name["libbatfish:IpAccessList:SetIpAccessListLine_protocol"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "LIST,LINE,PROTOCOL"
            }
      }.

      service_by_prefix["/batfish/SetIpAccessListLine_srcIpRange"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIpAccessListLine_srcIpRange"
      }.
      file_definition_by_name["SetIpAccessListLine_srcIpRange"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "LIST,LINE,SRCIPSTART,SRCIPEND",
         column_formats[] = "string,integer,integer,integer"
      }.
      file_binding_by_name["SetIpAccessListLine_srcIpRange"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIpAccessListLine_srcIpRange",
         predicate_binding_by_name["libbatfish:IpAccessList:SetIpAccessListLine_srcIpRange"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "LIST,LINE,SRCIPSTART,SRCIPEND"
            }
      }.

      service_by_prefix["/batfish/SetIpAccessListLine_srcPortRange"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIpAccessListLine_srcPortRange"
      }.
      file_definition_by_name["SetIpAccessListLine_srcPortRange"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "LIST,LINE,SRCPORTSTART,SRCPORTEND",
         column_formats[] = "string,integer,integer,integer"
      }.
      file_binding_by_name["SetIpAccessListLine_srcPortRange"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIpAccessListLine_srcPortRange",
         predicate_binding_by_name["libbatfish:IpAccessList:SetIpAccessListLine_srcPortRange"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "LIST,LINE,SRCPORTSTART,SRCPORTEND"
            }
      }.

// Interface
      service_by_prefix["/batfish/SetActiveInt"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetActiveInt"
      }.
      file_definition_by_name["SetActiveInt"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE",
         column_formats[] = "string,string"
      }.
      file_binding_by_name["SetActiveInt"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetActiveInt",
         predicate_binding_by_name["libbatfish:Interface:SetActiveInt"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE"
            }
      }.
      
      service_by_prefix["/batfish/SetFakeInterface"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetFakeInterface"
      }.
      file_definition_by_name["SetFakeInterface"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE",
         column_formats[] = "string,string"
      }.
      file_binding_by_name["SetFakeInterface"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetFakeInterface",
         predicate_binding_by_name["libbatfish:Interface:SetFakeInterface"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE"
            }
      }.

      service_by_prefix["/batfish/SetFlowSinkInterface"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetFlowSinkInterface"
      }.
      file_definition_by_name["SetFlowSinkInterface"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE",
         column_formats[] = "string,string"
      }.
      file_binding_by_name["SetFlowSinkInterface"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetFlowSinkInterface",
         predicate_binding_by_name["libbatfish:Interface:SetFlowSinkInterface"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE"
            }
      }.

      service_by_prefix["/batfish/SetIpInt"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIpInt"
      }.
      file_definition_by_name["SetIpInt"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE,IP,PREFIXLENGTH",
         column_formats[] = "string,string,integer,integer"
      }.
      file_binding_by_name["SetIpInt"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIpInt",
         predicate_binding_by_name["libbatfish:Interface:SetIpInt"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE,IP,PREFIXLENGTH"
            }
      }.

      service_by_prefix["/batfish/SetLinkLoadLimitIn"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetLinkLoadLimitIn"
      }.
      file_definition_by_name["SetLinkLoadLimitIn"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE,LIMIT",
         column_formats[] = "string,string,float"
      }.
      file_binding_by_name["SetLinkLoadLimitIn"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetLinkLoadLimitIn",
         predicate_binding_by_name["libbatfish:Interface:SetLinkLoadLimitIn"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE,LIMIT"
            }
      }.

      service_by_prefix["/batfish/SetLinkLoadLimitOut"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetLinkLoadLimitOut"
      }.
      file_definition_by_name["SetLinkLoadLimitOut"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE,LIMIT",
         column_formats[] = "string,string,float"
      }.
      file_binding_by_name["SetLinkLoadLimitOut"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetLinkLoadLimitOut",
         predicate_binding_by_name["libbatfish:Interface:SetLinkLoadLimitOut"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE,LIMIT"
            }
      }.

// Traffic
      service_by_prefix["/batfish/DuplicateRoleFlows"] = x,
      delim_service(x) {
         delim_file_binding[] = "DuplicateRoleFlows"
      }.
      file_definition_by_name["DuplicateRoleFlows"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "DUMMY",
         column_formats[] = "integer"
      }.
      file_binding_by_name["DuplicateRoleFlows"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "DuplicateRoleFlows",
         predicate_binding_by_name["libbatfish:Traffic:DuplicateRoleFlows"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "DUMMY"
            }
      }.

      service_by_prefix["/batfish/SetFlowOriginate"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetFlowOriginate"
      }.
      file_definition_by_name["SetFlowOriginate"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,SRCIP,DSTIP,SRCPORT,DSTPORT,IPPROTOCOL,TAG",
         column_formats[] = "string,integer,integer,integer,integer,integer,string"
      }.
      file_binding_by_name["SetFlowOriginate"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetFlowOriginate",
         predicate_binding_by_name["libbatfish:Traffic:SetFlowOriginate"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,SRCIP,DSTIP,SRCPORT,DSTPORT,IPPROTOCOL,TAG"
            }
      }.

// GeneratedRoute
      service_by_prefix["/batfish/SetGeneratedRoute_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetGeneratedRoute_flat"
      }.
      file_definition_by_name["SetGeneratedRoute_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,ADMIN",
         column_formats[] = "string,integer,integer,integer,integer"
      }.
      file_binding_by_name["SetGeneratedRoute_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetGeneratedRoute_flat",
         predicate_binding_by_name["libbatfish:GeneratedRoute:SetGeneratedRoute_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,ADMIN"
            }
      }.

      service_by_prefix["/batfish/SetGeneratedRouteDiscard_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetGeneratedRouteDiscard_flat"
      }.
      file_definition_by_name["SetGeneratedRouteDiscard_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH",
         column_formats[] = "string,integer,integer,integer"
      }.
      file_binding_by_name["SetGeneratedRouteDiscard_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetGeneratedRouteDiscard_flat",
         predicate_binding_by_name["libbatfish:GeneratedRoute:SetGeneratedRouteDiscard_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH"
            }
      }.

      service_by_prefix["/batfish/SetGeneratedRouteMetric_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetGeneratedRouteMetric_flat"
      }.
      file_definition_by_name["SetGeneratedRouteMetric_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,METRIC",
         column_formats[] = "string,integer,integer,integer,integer"
      }.
      file_binding_by_name["SetGeneratedRouteMetric_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetGeneratedRouteMetric_flat",
         predicate_binding_by_name["libbatfish:GeneratedRoute:SetGeneratedRouteMetric_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,METRIC"
            }
      }.

      service_by_prefix["/batfish/SetGeneratedRoutePolicy_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetGeneratedRoutePolicy_flat"
      }.
      file_definition_by_name["SetGeneratedRoutePolicy_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,MAP",
         column_formats[] = "string,integer,integer,integer,string"
      }.
      file_binding_by_name["SetGeneratedRoutePolicy_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetGeneratedRoutePolicy_flat",
         predicate_binding_by_name["libbatfish:GeneratedRoute:SetGeneratedRoutePolicy_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,MAP"
            }
      }.

// Route
      service_by_prefix["/batfish/SetStaticIntRoute_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetStaticIntRoute_flat"
      }.
      file_definition_by_name["SetStaticIntRoute_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,NEXTHOPIP,NEXTHOPINT,ADMIN,TAG",
         column_formats[] = "string,integer,integer,integer,integer,string,integer,integer"
      }.
      file_binding_by_name["SetStaticIntRoute_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetStaticIntRoute_flat",
         predicate_binding_by_name["libbatfish:Route:SetStaticIntRoute_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,NEXTHOPIP,NEXTHOPINT,ADMIN,TAG"
            }
      }.

      service_by_prefix["/batfish/SetStaticRoute_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetStaticRoute_flat"
      }.
      file_definition_by_name["SetStaticRoute_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,NEXTHOPIP,ADMIN,TAG",
         column_formats[] = "string,integer,integer,integer,integer,integer,integer"
      }.
      file_binding_by_name["SetStaticRoute_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetStaticRoute_flat",
         predicate_binding_by_name["libbatfish:Route:SetStaticRoute_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,NEXTHOPIP,ADMIN,TAG"
            }
      }.

// Ospf
      service_by_prefix["/batfish/SetOspfGeneratedRoute_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetOspfGeneratedRoute_flat"
      }.
      file_definition_by_name["SetOspfGeneratedRoute_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH",
         column_formats[] = "string,integer,integer,integer"
      }.
      file_binding_by_name["SetOspfGeneratedRoute_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetOspfGeneratedRoute_flat",
         predicate_binding_by_name["libbatfish:Ospf:SetOspfGeneratedRoute_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH"
            }
      }.

      service_by_prefix["/batfish/SetOspfGeneratedRoutePolicy_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetOspfGeneratedRoutePolicy_flat"
      }.
      file_definition_by_name["SetOspfGeneratedRoutePolicy_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,MAP",
         column_formats[] = "string,integer,integer,integer,string"
      }.
      file_binding_by_name["SetOspfGeneratedRoutePolicy_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetOspfGeneratedRoutePolicy_flat",
         predicate_binding_by_name["libbatfish:Ospf:SetOspfGeneratedRoutePolicy_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,MAP"
            }
      }.

      service_by_prefix["/batfish/SetOspfInterface"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetOspfInterface"
      }.
      file_definition_by_name["SetOspfInterface"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE,AREA",
         column_formats[] = "string,string,integer"
      }.
      file_binding_by_name["SetOspfInterface"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetOspfInterface",
         predicate_binding_by_name["libbatfish:Ospf:SetOspfInterface"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE,AREA"
            }
      }.

      service_by_prefix["/batfish/SetOspfInterfaceCost"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetOspfInterfaceCost"
      }.
      file_definition_by_name["SetOspfInterfaceCost"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE,COST",
         column_formats[] = "string,string,integer"
      }.
      file_binding_by_name["SetOspfInterfaceCost"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetOspfInterfaceCost",
         predicate_binding_by_name["libbatfish:Ospf:SetOspfInterfaceCost"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE,COST"
            }
      }.

      service_by_prefix["/batfish/SetOspfOutboundPolicyMap"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetOspfOutboundPolicyMap"
      }.
      file_definition_by_name["SetOspfOutboundPolicyMap"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,MAP",
         column_formats[] = "string,string"
      }.
      file_binding_by_name["SetOspfOutboundPolicyMap"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetOspfOutboundPolicyMap",
         predicate_binding_by_name["libbatfish:Ospf:SetOspfOutboundPolicyMap"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,MAP"
            }
      }.

      service_by_prefix["/batfish/SetOspfRouterId"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetOspfRouterId"
      }.
      file_definition_by_name["SetOspfRouterId"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,IP",
         column_formats[] = "string,integer"
      }.
      file_binding_by_name["SetOspfRouterId"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetOspfRouterId",
         predicate_binding_by_name["libbatfish:Ospf:SetOspfRouterId"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,IP"
            }
      }.


// CommunityList
      service_by_prefix["/batfish/SetCommunityListLine"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetCommunityListLine"
      }.
      file_definition_by_name["SetCommunityListLine"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "LIST,LINE,COMMUNITY",
         column_formats[] = "string,integer,integer"
      }.
      file_binding_by_name["SetCommunityListLine"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetCommunityListLine",
         predicate_binding_by_name["libbatfish:CommunityList:SetCommunityListLine"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "LIST,LINE,COMMUNITY"
            }
      }.

      service_by_prefix["/batfish/SetCommunityListLinePermit"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetCommunityListLinePermit"
      }.
      file_definition_by_name["SetCommunityListLinePermit"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "LIST,LINE",
         column_formats[] = "string,integer"
      }.
      file_binding_by_name["SetCommunityListLinePermit"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetCommunityListLinePermit",
         predicate_binding_by_name["libbatfish:CommunityList:SetCommunityListLinePermit"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "LIST,LINE"
            }
      }.

// RouteFilter
      service_by_prefix["/batfish/SetRouteFilterLine"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetRouteFilterLine"
      }.
      file_definition_by_name["SetRouteFilterLine"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "LIST,LINE,NETWORKSTART,NETWORKEND,MINPREFIX,MAXPREFIX",
         column_formats[] = "string,integer,integer,integer,integer,integer"
      }.
      file_binding_by_name["SetRouteFilterLine"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetRouteFilterLine",
         predicate_binding_by_name["libbatfish:RouteFilter:SetRouteFilterLine"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "LIST,LINE,NETWORKSTART,NETWORKEND,MINPREFIX,MAXPREFIX"
            }
      }.

      service_by_prefix["/batfish/SetRouteFilterPermitLine"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetRouteFilterPermitLine"
      }.
      file_definition_by_name["SetRouteFilterPermitLine"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "LIST,LINE",
         column_formats[] = "string,integer"
      }.
      file_binding_by_name["SetRouteFilterPermitLine"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetRouteFilterPermitLine",
         predicate_binding_by_name["libbatfish:RouteFilter:SetRouteFilterPermitLine"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "LIST,LINE"
            }
      }.

// PolicyMap
      service_by_prefix["/batfish/SetPolicyMapClauseAddCommunity"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseAddCommunity"
      }.
      file_definition_by_name["SetPolicyMapClauseAddCommunity"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,COMMUNITY",
         column_formats[] = "string,integer,integer"
      }.
      file_binding_by_name["SetPolicyMapClauseAddCommunity"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseAddCommunity",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseAddCommunity"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,COMMUNITY"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseDeleteCommunity"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseDeleteCommunity"
      }.
      file_definition_by_name["SetPolicyMapClauseDeleteCommunity"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,LIST",
         column_formats[] = "string,integer,string"
      }.
      file_binding_by_name["SetPolicyMapClauseDeleteCommunity"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseDeleteCommunity",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseDeleteCommunity"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,LIST"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseDeny"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseDeny"
      }.
      file_definition_by_name["SetPolicyMapClauseDeny"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE",
         column_formats[] = "string,integer"
      }.
      file_binding_by_name["SetPolicyMapClauseDeny"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseDeny",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseDeny"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseMatchAcl"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseMatchAcl"
      }.
      file_definition_by_name["SetPolicyMapClauseMatchAcl"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,ACL",
         column_formats[] = "string,integer,string"
      }.
      file_binding_by_name["SetPolicyMapClauseMatchAcl"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseMatchAcl",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseMatchAcl"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,ACL"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseMatchAsPath"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseMatchAsPath"
      }.
      file_definition_by_name["SetPolicyMapClauseMatchAsPath"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,ASPATH",
         column_formats[] = "string,integer,string"
      }.
      file_binding_by_name["SetPolicyMapClauseMatchAsPath"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseMatchAsPath",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseMatchAsPath"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,ASPATH"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseMatchColor"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseMatchColor"
      }.
      file_definition_by_name["SetPolicyMapClauseMatchColor"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,COLOR",
         column_formats[] = "string,integer,integer"
      }.
      file_binding_by_name["SetPolicyMapClauseMatchColor"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseMatchColor",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseMatchColor"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,COLOR"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseMatchCommunityList"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseMatchCommunityList"
      }.
      file_definition_by_name["SetPolicyMapClauseMatchCommunityList"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,LIST",
         column_formats[] = "string,integer,string"
      }.
      file_binding_by_name["SetPolicyMapClauseMatchCommunityList"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseMatchCommunityList",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseMatchCommunityList"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,LIST"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseMatchInterface"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseMatchInterface"
      }.
      file_definition_by_name["SetPolicyMapClauseMatchInterface"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,INTERFACE",
         column_formats[] = "string,integer,string"
      }.
      file_binding_by_name["SetPolicyMapClauseMatchInterface"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseMatchInterface",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseMatchInterface"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,INTERFACE"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseMatchNeighbor"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseMatchNeighbor"
      }.
      file_definition_by_name["SetPolicyMapClauseMatchNeighbor"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,NEIGHBORIP",
         column_formats[] = "string,integer,integer"
      }.
      file_binding_by_name["SetPolicyMapClauseMatchNeighbor"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseMatchNeighbor",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseMatchNeighbor"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,NEIGHBORIP"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseMatchPolicy"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseMatchPolicy"
      }.
      file_definition_by_name["SetPolicyMapClauseMatchPolicy"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,POLICY",
         column_formats[] = "string,integer,string"
      }.
      file_binding_by_name["SetPolicyMapClauseMatchPolicy"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseMatchPolicy",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseMatchPolicy"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,POLICY"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseMatchProtocol"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseMatchProtocol"
      }.
      file_definition_by_name["SetPolicyMapClauseMatchProtocol"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,PROTOCOL",
         column_formats[] = "string,integer,string"
      }.
      file_binding_by_name["SetPolicyMapClauseMatchProtocol"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseMatchProtocol",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseMatchProtocol"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,PROTOCOL"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseMatchRouteFilter"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseMatchRouteFilter"
      }.
      file_definition_by_name["SetPolicyMapClauseMatchRouteFilter"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,LIST",
         column_formats[] = "string,integer,string"
      }.
      file_binding_by_name["SetPolicyMapClauseMatchRouteFilter"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseMatchRouteFilter",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseMatchRouteFilter"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,LIST"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseMatchTag"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseMatchTag"
      }.
      file_definition_by_name["SetPolicyMapClauseMatchTag"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,TAG",
         column_formats[] = "string,integer,integer"
      }.
      file_binding_by_name["SetPolicyMapClauseMatchTag"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseMatchTag",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseMatchTag"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,TAG"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClausePermit"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClausePermit"
      }.
      file_definition_by_name["SetPolicyMapClausePermit"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE",
         column_formats[] = "string,integer"
      }.
      file_binding_by_name["SetPolicyMapClausePermit"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClausePermit",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClausePermit"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseSetCommunity"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseSetCommunity"
      }.
      file_definition_by_name["SetPolicyMapClauseSetCommunity"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,COMMUNITY",
         column_formats[] = "string,integer,integer"
      }.
      file_binding_by_name["SetPolicyMapClauseSetCommunity"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseSetCommunity",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseSetCommunity"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,COMMUNITY"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseSetCommunityNone"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseSetCommunityNone"
      }.
      file_definition_by_name["SetPolicyMapClauseSetCommunityNone"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE",
         column_formats[] = "string,integer"
      }.
      file_binding_by_name["SetPolicyMapClauseSetCommunityNone"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseSetCommunityNone",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseSetCommunityNone"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseSetLocalPreference"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseSetLocalPreference"
      }.
      file_definition_by_name["SetPolicyMapClauseSetLocalPreference"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,LOCALPREF",
         column_formats[] = "string,integer,integer"
      }.
      file_binding_by_name["SetPolicyMapClauseSetLocalPreference"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseSetLocalPreference",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseSetLocalPreference"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,LOCALPREF"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseSetMetric"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseSetMetric"
      }.
      file_definition_by_name["SetPolicyMapClauseSetMetric"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,METRIC",
         column_formats[] = "string,integer,integer"
      }.
      file_binding_by_name["SetPolicyMapClauseSetMetric"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseSetMetric",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseSetMetric"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,METRIC"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseSetNextHopIp"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseSetNextHopIp"
      }.
      file_definition_by_name["SetPolicyMapClauseSetNextHopIp"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,NEXTHOPIP",
         column_formats[] = "string,integer,integer"
      }.
      file_binding_by_name["SetPolicyMapClauseSetNextHopIp"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseSetNextHopIp",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseSetNextHopIp"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,NEXTHOPIP"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseSetOriginType"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseSetOriginType"
      }.
      file_definition_by_name["SetPolicyMapClauseSetOriginType"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,ORIGINTYPE",
         column_formats[] = "string,integer,string"
      }.
      file_binding_by_name["SetPolicyMapClauseSetOriginType"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseSetOriginType",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseSetOriginType"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,ORIGINTYPE"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapClauseSetProtocol"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapClauseSetProtocol"
      }.
      file_definition_by_name["SetPolicyMapClauseSetProtocol"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,CLAUSE,PROTOCOL",
         column_formats[] = "string,integer,string"
      }.
      file_binding_by_name["SetPolicyMapClauseSetProtocol"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapClauseSetProtocol",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapClauseSetProtocol"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,CLAUSE,PROTOCOL"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapIsisExternalRouteType"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapIsisExternalRouteType"
      }.
      file_definition_by_name["SetPolicyMapIsisExternalRouteType"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,PROTOCOL",
         column_formats[] = "string,string"
      }.
      file_binding_by_name["SetPolicyMapIsisExternalRouteType"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapIsisExternalRouteType",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapIsisExternalRouteType"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,PROTOCOL"
            }
      }.

      service_by_prefix["/batfish/SetPolicyMapOspfExternalRouteType"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPolicyMapOspfExternalRouteType"
      }.
      file_definition_by_name["SetPolicyMapOspfExternalRouteType"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "MAP,PROTOCOL",
         column_formats[] = "string,string"
      }.
      file_binding_by_name["SetPolicyMapOspfExternalRouteType"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPolicyMapOspfExternalRouteType",
         predicate_binding_by_name["libbatfish:PolicyMap:SetPolicyMapOspfExternalRouteType"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "MAP,PROTOCOL"
            }
      }.

// Bgp
      service_by_prefix["/batfish/SetBgpDefaultLocalPref_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpDefaultLocalPref_flat"
      }.
      file_definition_by_name["SetBgpDefaultLocalPref_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,LOCALPREF",
         column_formats[] = "string,integer,integer,integer,integer"
      }.
      file_binding_by_name["SetBgpDefaultLocalPref_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpDefaultLocalPref_flat",
         predicate_binding_by_name["libbatfish:Bgp:SetBgpDefaultLocalPref_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,LOCALPREF"
            }
      }.

      service_by_prefix["/batfish/SetBgpExportPolicy_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpExportPolicy_flat"
      }.
      file_definition_by_name["SetBgpExportPolicy_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,MAP",
         column_formats[] = "string,integer,integer,integer,string"
      }.
      file_binding_by_name["SetBgpExportPolicy_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpExportPolicy_flat",
         predicate_binding_by_name["libbatfish:Bgp:SetBgpExportPolicy_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,MAP"
            }
      }.

      service_by_prefix["/batfish/SetBgpGeneratedRoute_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpGeneratedRoute_flat"
      }.
      file_definition_by_name["SetBgpGeneratedRoute_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH",
         column_formats[] = "string,integer,integer,integer"
      }.
      file_binding_by_name["SetBgpGeneratedRoute_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpGeneratedRoute_flat",
         predicate_binding_by_name["libbatfish:Bgp:SetBgpGeneratedRoute_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH"
            }
      }.

      service_by_prefix["/batfish/SetBgpGeneratedRoutePolicy_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpGeneratedRoutePolicy_flat"
      }.
      file_definition_by_name["SetBgpGeneratedRoutePolicy_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,MAP",
         column_formats[] = "string,integer,integer,integer,string"
      }.
      file_binding_by_name["SetBgpGeneratedRoutePolicy_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpGeneratedRoutePolicy_flat",
         predicate_binding_by_name["libbatfish:Bgp:SetBgpGeneratedRoutePolicy_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,MAP"
            }
      }.

      service_by_prefix["/batfish/SetBgpImportPolicy_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpImportPolicy_flat"
      }.
      file_definition_by_name["SetBgpImportPolicy_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,MAP",
         column_formats[] = "string,integer,integer,integer,string"
      }.
      file_binding_by_name["SetBgpImportPolicy_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpImportPolicy_flat",
         predicate_binding_by_name["libbatfish:Bgp:SetBgpImportPolicy_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,MAP"
            }
      }.

      service_by_prefix["/batfish/SetBgpNeighborDefaultMetric_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpNeighborDefaultMetric_flat"
      }.
      file_definition_by_name["SetBgpNeighborDefaultMetric_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,METRIC",
         column_formats[] = "string,integer,integer,integer,integer"
      }.
      file_binding_by_name["SetBgpNeighborDefaultMetric_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpNeighborDefaultMetric_flat",
         predicate_binding_by_name["libbatfish:Bgp:SetBgpNeighborDefaultMetric_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,METRIC"
            }
      }.

      service_by_prefix["/batfish/SetBgpNeighborGeneratedRoute_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpNeighborGeneratedRoute_flat"
      }.
      file_definition_by_name["SetBgpNeighborGeneratedRoute_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,NETWORKSTART,NETWORKEND,PREFIXLENGTH",
         column_formats[] = "string,integer,integer,integer,integer,integer,integer"
      }.
      file_binding_by_name["SetBgpNeighborGeneratedRoute_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpNeighborGeneratedRoute_flat",
         predicate_binding_by_name["libbatfish:Bgp:SetBgpNeighborGeneratedRoute_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,NETWORKSTART,NETWORKEND,PREFIXLENGTH"
            }
      }.

      service_by_prefix["/batfish/SetBgpNeighborGeneratedRoutePolicy_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpNeighborGeneratedRoutePolicy_flat"
      }.
      file_definition_by_name["SetBgpNeighborGeneratedRoutePolicy_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,NETWORKSTART,NETWORKEND,PREFIXLENGTH,MAP",
         column_formats[] = "string,integer,integer,integer,integer,integer,integer,string"
      }.
      file_binding_by_name["SetBgpNeighborGeneratedRoutePolicy_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpNeighborGeneratedRoutePolicy_flat",
         predicate_binding_by_name["libbatfish:Bgp:SetBgpNeighborGeneratedRoutePolicy_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,NETWORKSTART,NETWORKEND,PREFIXLENGTH,MAP"
            }
      }.

      service_by_prefix["/batfish/SetBgpNeighborNetwork_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpNeighborNetwork_flat"
      }.
      file_definition_by_name["SetBgpNeighborNetwork_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH",
         column_formats[] = "string,integer,integer,integer"
      }.
      file_binding_by_name["SetBgpNeighborNetwork_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpNeighborNetwork_flat",
         predicate_binding_by_name["libbatfish:Bgp:SetBgpNeighborNetwork_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH"
            }
      }.

      service_by_prefix["/batfish/SetBgpNeighborSendCommunity_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpNeighborSendCommunity_flat"
      }.
      file_definition_by_name["SetBgpNeighborSendCommunity_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH",
         column_formats[] = "string,integer,integer,integer"
      }.
      file_binding_by_name["SetBgpNeighborSendCommunity_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpNeighborSendCommunity_flat",
         predicate_binding_by_name["libbatfish:Bgp:SetBgpNeighborSendCommunity_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH"
            }
      }.

      service_by_prefix["/batfish/SetBgpOriginationPolicy_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpOriginationPolicy_flat"
      }.
      file_definition_by_name["SetBgpOriginationPolicy_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,MAP",
         column_formats[] = "string,integer,integer,integer,string"
      }.
      file_binding_by_name["SetBgpOriginationPolicy_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpOriginationPolicy_flat",
         predicate_binding_by_name["libbatfish:Bgp:SetBgpOriginationPolicy_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,MAP"
            }
      }.

      service_by_prefix["/batfish/SetLocalAs_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetLocalAs_flat"
      }.
      file_definition_by_name["SetLocalAs_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,LOCALAS",
         column_formats[] = "string,integer,integer,integer,integer"
      }.
      file_binding_by_name["SetLocalAs_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetLocalAs_flat",
         predicate_binding_by_name["libbatfish:Bgp:SetLocalAs_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,LOCALAS"
            }
      }.

      service_by_prefix["/batfish/SetRemoteAs_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetRemoteAs_flat"
      }.
      file_definition_by_name["SetRemoteAs_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,REMOTEAS",
         column_formats[] = "string,integer,integer,integer,integer"
      }.
      file_binding_by_name["SetRemoteAs_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetRemoteAs_flat",
         predicate_binding_by_name["libbatfish:Bgp:SetRemoteAs_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,REMOTEAS"
            }
      }.

      service_by_prefix["/batfish/SetRouteReflectorClient_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetRouteReflectorClient_flat"
      }.
      file_definition_by_name["SetRouteReflectorClient_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,CLUSTERID",
         column_formats[] = "string,integer,integer,integer,integer"
      }.
      file_binding_by_name["SetRouteReflectorClient_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetRouteReflectorClient_flat",
         predicate_binding_by_name["libbatfish:Bgp:SetRouteReflectorClient_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NEIGHBORNETWORKSTART,NEIGHBORNETWORKEND,NEIGHBORNETWORKPREFIXLENGTH,CLUSTERID"
            }
      }.

      // Node
      service_by_prefix["/batfish/SetNodeRole"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetNodeRole"
      }.
      file_definition_by_name["SetNodeRole"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,ROLE",
         column_formats[] = "string,string"
      }.
      file_binding_by_name["SetNodeRole"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetNodeRole",
         predicate_binding_by_name["libbatfish:Node:SetNodeRole"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,ROLE"
            }
      }.

      service_by_prefix["/batfish/SetNodeVendor"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetNodeVendor"
      }.
      file_definition_by_name["SetNodeVendor"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,VENDOR",
         column_formats[] = "string,string"
      }.
      file_binding_by_name["SetNodeVendor"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetNodeVendor",
         predicate_binding_by_name["libbatfish:Node:SetNodeVendor"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,VENDOR"
            }
      }.

      // AsPath
      service_by_prefix["/batfish/SetAsPathLineDeny"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetAsPathLineDeny"
      }.
      file_definition_by_name["SetAsPathLineDeny"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "ASPATH,LINE",
         column_formats[] = "string,integer"
      }.
      file_binding_by_name["SetAsPathLineDeny"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetAsPathLineDeny",
         predicate_binding_by_name["libbatfish:AsPath:SetAsPathLineDeny"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "ASPATH,LINE"
            }
      }.

      service_by_prefix["/batfish/SetAsPathLineMatchAs"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetAsPathLineMatchAs"
      }.
      file_definition_by_name["SetAsPathLineMatchAs"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "ASPATH,LINE,ASLOW,ASHIGH",
         column_formats[] = "string,integer,integer,integer"
      }.
      file_binding_by_name["SetAsPathLineMatchAs"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetAsPathLineMatchAs",
         predicate_binding_by_name["libbatfish:AsPath:SetAsPathLineMatchAs"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "ASPATH,LINE,ASLOW,ASHIGH"
            }
      }.

      service_by_prefix["/batfish/SetAsPathLineMatchAsAtBeginning"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetAsPathLineMatchAsAtBeginning"
      }.
      file_definition_by_name["SetAsPathLineMatchAsAtBeginning"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "ASPATH,LINE,ASLOW,ASHIGH",
         column_formats[] = "string,integer,integer,integer"
      }.
      file_binding_by_name["SetAsPathLineMatchAsAtBeginning"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetAsPathLineMatchAsAtBeginning",
         predicate_binding_by_name["libbatfish:AsPath:SetAsPathLineMatchAsAtBeginning"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "ASPATH,LINE,ASLOW,ASHIGH"
            }
      }.

      service_by_prefix["/batfish/SetAsPathLineMatchAsPair"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetAsPathLineMatchAsPair"
      }.
      file_definition_by_name["SetAsPathLineMatchAsPair"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "ASPATH,LINE,AS1LOW,AS1HIGH,AS2LOW,AS2HIGH",
         column_formats[] = "string,integer,integer,integer,integer,integer"
      }.
      file_binding_by_name["SetAsPathLineMatchAsPair"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetAsPathLineMatchAsPair",
         predicate_binding_by_name["libbatfish:AsPath:SetAsPathLineMatchAsPair"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "ASPATH,LINE,AS1LOW,AS1HIGH,AS2LOW,AS2HIGH"
            }
      }.

      service_by_prefix["/batfish/SetAsPathLineMatchAsPairAtBeginning"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetAsPathLineMatchAsPairAtBeginning"
      }.
      file_definition_by_name["SetAsPathLineMatchAsPairAtBeginning"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "ASPATH,LINE,AS1LOW,AS1HIGH,AS2LOW,AS2HIGH",
         column_formats[] = "string,integer,integer,integer,integer,integer"
      }.
      file_binding_by_name["SetAsPathLineMatchAsPairAtBeginning"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetAsPathLineMatchAsPairAtBeginning",
         predicate_binding_by_name["libbatfish:AsPath:SetAsPathLineMatchAsPairAtBeginning"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "ASPATH,LINE,AS1LOW,AS1HIGH,AS2LOW,AS2HIGH"
            }
      }.

      service_by_prefix["/batfish/SetAsPathLineMatchEmpty"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetAsPathLineMatchEmpty"
      }.
      file_definition_by_name["SetAsPathLineMatchEmpty"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "ASPATH,LINE",
         column_formats[] = "string,integer"
      }.
      file_binding_by_name["SetAsPathLineMatchEmpty"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetAsPathLineMatchEmpty",
         predicate_binding_by_name["libbatfish:AsPath:SetAsPathLineMatchEmpty"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "ASPATH,LINE"
            }
      }.

      service_by_prefix["/batfish/SetAsPathLinePermit"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetAsPathLinePermit"
      }.
      file_definition_by_name["SetAsPathLinePermit"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "ASPATH,LINE",
         column_formats[] = "string,integer"
      }.
      file_binding_by_name["SetAsPathLinePermit"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetAsPathLinePermit",
         predicate_binding_by_name["libbatfish:AsPath:SetAsPathLinePermit"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "ASPATH,LINE"
            }
      }.

      // Isis
      service_by_prefix["/batfish/SetIsisArea"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIsisArea"
      }.
      file_definition_by_name["SetIsisArea"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,AREA",
         column_formats[] = "string,integer"
      }.
      file_binding_by_name["SetIsisArea"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIsisArea",
         predicate_binding_by_name["libbatfish:Isis:SetIsisArea"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,AREA"
            }
      }.

      service_by_prefix["/batfish/SetIsisGeneratedRoute_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIsisGeneratedRoute_flat"
      }.
      file_definition_by_name["SetIsisGeneratedRoute_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH",
         column_formats[] = "string,integer,integer,integer"
      }.
      file_binding_by_name["SetIsisGeneratedRoute_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIsisGeneratedRoute_flat",
         predicate_binding_by_name["libbatfish:Isis:SetIsisGeneratedRoute_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH"
            }
      }.

      service_by_prefix["/batfish/SetIsisGeneratedRoutePolicy_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIsisGeneratedRoutePolicy_flat"
      }.
      file_definition_by_name["SetIsisGeneratedRoutePolicy_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,MAP",
         column_formats[] = "string,integer,integer,integer,string"
      }.
      file_binding_by_name["SetIsisGeneratedRoutePolicy_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIsisGeneratedRoutePolicy_flat",
         predicate_binding_by_name["libbatfish:Isis:SetIsisGeneratedRoutePolicy_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,MAP"
            }
      }.

      service_by_prefix["/batfish/SetIsisInterfaceCost"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIsisInterfaceCost"
      }.
      file_definition_by_name["SetIsisInterfaceCost"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE,COST",
         column_formats[] = "string,string,integer"
      }.
      file_binding_by_name["SetIsisInterfaceCost"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIsisInterfaceCost",
         predicate_binding_by_name["libbatfish:Isis:SetIsisInterfaceCost"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE,COST"
            }
      }.

      service_by_prefix["/batfish/SetIsisL1Node"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIsisL1Node"
      }.
      file_definition_by_name["SetIsisL1Node"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE",
         column_formats[] = "string"
      }.
      file_binding_by_name["SetIsisL1Node"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIsisL1Node",
         predicate_binding_by_name["libbatfish:Isis:SetIsisL1Node"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE"
            }
      }.

      service_by_prefix["/batfish/SetIsisL2Node"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIsisL2Node"
      }.
      file_definition_by_name["SetIsisL2Node"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE",
         column_formats[] = "string"
      }.
      file_binding_by_name["SetIsisL2Node"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIsisL2Node",
         predicate_binding_by_name["libbatfish:Isis:SetIsisL2Node"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE"
            }
      }.

      service_by_prefix["/batfish/SetIsisOutboundPolicyMap"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIsisOutboundPolicyMap"
      }.
      file_definition_by_name["SetIsisOutboundPolicyMap"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,POLICY",
         column_formats[] = "string,string"
      }.
      file_binding_by_name["SetIsisOutboundPolicyMap"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIsisOutboundPolicyMap",
         predicate_binding_by_name["libbatfish:Isis:SetIsisOutboundPolicyMap"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,POLICY"
            }
      }.

      service_by_prefix["/batfish/SetIsisL1ActiveInterface"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIsisL1ActiveInterface"
      }.
      file_definition_by_name["SetIsisL1ActiveInterface"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE",
         column_formats[] = "string,string"
      }.
      file_binding_by_name["SetIsisL1ActiveInterface"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIsisL1ActiveInterface",
         predicate_binding_by_name["libbatfish:Isis:SetIsisL1ActiveInterface"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE"
            }
      }.

      service_by_prefix["/batfish/SetIsisL1PassiveInterface"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIsisL1PassiveInterface"
      }.
      file_definition_by_name["SetIsisL1PassiveInterface"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE",
         column_formats[] = "string,string"
      }.
      file_binding_by_name["SetIsisL1PassiveInterface"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIsisL1PassiveInterface",
         predicate_binding_by_name["libbatfish:Isis:SetIsisL1PassiveInterface"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE"
            }
      }.

      service_by_prefix["/batfish/SetIsisL2ActiveInterface"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIsisL2ActiveInterface"
      }.
      file_definition_by_name["SetIsisL2ActiveInterface"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE",
         column_formats[] = "string,string"
      }.
      file_binding_by_name["SetIsisL2ActiveInterface"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIsisL2ActiveInterface",
         predicate_binding_by_name["libbatfish:Isis:SetIsisL2ActiveInterface"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE"
            }
      }.

      service_by_prefix["/batfish/SetIsisL2PassiveInterface"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIsisL2PassiveInterface"
      }.
      file_definition_by_name["SetIsisL2PassiveInterface"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,INTERFACE",
         column_formats[] = "string,string"
      }.
      file_binding_by_name["SetIsisL2PassiveInterface"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIsisL2PassiveInterface",
         predicate_binding_by_name["libbatfish:Isis:SetIsisL2PassiveInterface"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,INTERFACE"
            }
      }.

      // Precomputed
      service_by_prefix["/batfish/SetBgpAdvertisement_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpAdvertisement_flat"
      }.
      file_definition_by_name["SetBgpAdvertisement_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "PCINDEX,TYPE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,NEXTHOPIP,SRCNODE,SRCIP,DSTNODE,DSTIP,SRCPROTOCOL,ORIGINTYPE,LOCALPREF,MED,ORIGINATORIP",
         column_formats[] = "integer,string,integer,integer,integer,integer,string,integer,string,integer,string,string,integer,integer,integer"
      }.
      file_binding_by_name["SetBgpAdvertisement_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpAdvertisement_flat",
         predicate_binding_by_name["libbatfish:Precomputed:SetBgpAdvertisement_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "PCINDEX,TYPE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,NEXTHOPIP,SRCNODE,SRCIP,DSTNODE,DSTIP,SRCPROTOCOL,ORIGINTYPE,LOCALPREF,MED,ORIGINATORIP"
            }
      }.

      service_by_prefix["/batfish/SetBgpAdvertisementCommunity"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpAdvertisementCommunity"
      }.
      file_definition_by_name["SetBgpAdvertisementCommunity"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "PCINDEX,COMMUNITY",
         column_formats[] = "integer,integer"
      }.
      file_binding_by_name["SetBgpAdvertisementCommunity"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpAdvertisementCommunity",
         predicate_binding_by_name["libbatfish:Precomputed:SetBgpAdvertisementCommunity"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "PCINDEX,COMMUNITY"
            }
      }.

      service_by_prefix["/batfish/SetBgpAdvertisementPath"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpAdvertisementPath"
      }.
      file_definition_by_name["SetBgpAdvertisementPath"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "PCINDEX,INDEX,AS",
         column_formats[] = "integer,integer,integer"
      }.
      file_binding_by_name["SetBgpAdvertisementPath"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpAdvertisementPath",
         predicate_binding_by_name["libbatfish:Precomputed:SetBgpAdvertisementPath"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "PCINDEX,INDEX,AS"
            }
      }.

      service_by_prefix["/batfish/SetBgpAdvertisementPathSize"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetBgpAdvertisementPathSize"
      }.
      file_definition_by_name["SetBgpAdvertisementPathSize"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "PCINDEX,SIZE",
         column_formats[] = "integer,integer"
      }.
      file_binding_by_name["SetBgpAdvertisementPathSize"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetBgpAdvertisementPathSize",
         predicate_binding_by_name["libbatfish:Precomputed:SetBgpAdvertisementPathSize"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "PCINDEX,SIZE"
            }
      }.

      service_by_prefix["/batfish/SetIbgpNeighbors"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetIbgpNeighbors"
      }.
      file_definition_by_name["SetIbgpNeighbors"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE1,IP1,NODE2,IP2",
         column_formats[] = "string,integer,string,integer"
      }.
      file_binding_by_name["SetIbgpNeighbors"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetIbgpNeighbors",
         predicate_binding_by_name["libbatfish:Precomputed:SetIbgpNeighbors"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE1,IP1,NODE2,IP2"
            }
      }.

      service_by_prefix["/batfish/SetPrecomputedRoute_flat"] = x,
      delim_service(x) {
         delim_file_binding[] = "SetPrecomputedRoute_flat"
      }.
      file_definition_by_name["SetPrecomputedRoute_flat"] = fd,
      file_definition(fd) {
         file_delimiter[] = "|",
         column_headers[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,NEXTHOPIP,ADMIN,COST,PROTOCOL,TAG",
         column_formats[] = "string,int,int,int,int,int,int,string,int"
      }.
      file_binding_by_name["SetPrecomputedRoute_flat"] = fb,
      file_binding(fb) {
         file_binding_entity_creation[] = "accumulate",
         file_binding_definition_name[] = "SetPrecomputedRoute_flat",
         predicate_binding_by_name["libbatfish:Precomputed:SetPrecomputedRoute_flat"] =
            predicate_binding(_) {
               predicate_binding_columns[] = "NODE,NETWORKSTART,NETWORKEND,PREFIXLENGTH,NEXTHOPIP,ADMIN,COST,PROTOCOL,TAG"
            }
      }.

   })
} <-- .

